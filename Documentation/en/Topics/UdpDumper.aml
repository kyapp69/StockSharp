<?xml version="1.0" encoding="utf-8"?>
<topic id="efb4cf8e-9bf4-495d-942e-84b2cf826eaf" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
	  <para>The app <legacyBold>S#.UDPDumper</legacyBold> is designed to accumulate UDP packets. Using this program, you can check the valid of the network settings made by a broker or exchange.
	  And also, accumulate data for further tests of the connector.</para>
      <para>To install need use <link xlink:href="6b40ff4e-2c3b-4d94-b676-f15f576ade07" />.</para>
    </introduction>
    <procedure>
		<title>Setup and run</title>
		<steps class="ordered">
			  <step>
				  <content>
		  				<para>On first launch, the app shows the following:</para>
<mediaLink><image placement="left" xlink:href="Dumper_1" /></mediaLink>
				  </content>
			  </step>
			  <step>
				  <content>
		  				<para>To add network feeds, you can add both manually and automatically load all feeds from the config files of exchanges. To do this, click on the button:</para>
		  				<mediaLink><image placement="left" xlink:href="Dumper_2" /></mediaLink>
				  </content>
			  </step>
			  <step>
				  <content>
		  				<para>In the window that appears, you need to find the desired config file from the exchange and open it:</para>
		  				<mediaLink>
<image placement="left" xlink:href="Dumper_3"/>
</mediaLink>
				  </content>
			  </step>
			  			  <step>
				  <content>
		  				<para>All feeds with IP addresses and ports settings will be loaded from a file:</para>
		  				<mediaLink>
<image placement="left" xlink:href="Dumper_4"/>
</mediaLink>
				  </content>
			  </step>
			  <step>
				  <content>
		  				<para>It is necessary to select the necessary feeds, and click on the download start button:</para>
		  				<mediaLink>
<image placement="left" xlink:href="Dumper_5"/>
</mediaLink>
				  </content>
			  </step>
			  <step>
				  <content>
		  				<para>В случае успешных настроек программа начнет получать UDP датаграммы и записывать на диск. Программа будет писать кол-во полученных байтов для каждого потока:</para>
		  				<mediaLink>
<image placement="left" xlink:href="Dumper_6"/>
</mediaLink>
						<alert class="caution">
						  <para>If the settings are successful, the program will start receiving UDP datagrams and writing them to disk. The app will write the number of bytes received for each feed.</para>
						</alert>
				  </content>
			  </step>
			  <step>
				  <content>
		  				<para>The app <legacyBold>S#.UDPDumper</legacyBold> is written with a graphical interface. If the program is launched without a graphical interface (as well as running under Linux operating systems, etc.)
		  				you can use the <legacyBold>S#.UDPDumper.Console</legacyBold>, program, which is a console and cross-platform version.</para>
		  				<para>The app <legacyBold>S#.UDPDumper.Console</legacyBold> takes as a parameter the path to the file created by the UI version (exactly the UI version, and <legacyBold>not an exchange config</legacyBold>):</para>
		  				<code language="C#">
		<![CDATA[
		StockSharp.UdpDumper.Console.exe settings.xml
		]]>
		</code>
				  </content>
			  </step>
				<step>
				  <content>
		  				<para>To test on the accumulated data of the connector, you can use the dump mode. More details <link xlink:href="875c5503-ba67-4973-adae-7ded540ab83c" />.</para>
				  </content>
			  </step>
		  </steps>
    </procedure>
  </developerConceptualDocument>
</topic>